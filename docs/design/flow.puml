@startuml

skinparam BoxPadding 20

box "Node"
participant "Contracts" as C
endbox

box "Trustee" #LightYellow
actor "Agent" as T
participant "VDR" as TV
participant "Wallet" as TW
endbox

box "Endorser"
actor "Agent" as E
participant "VDR" as EV
participant "Wallet" as EW
endbox

box "Faber" #LightYellow
actor "Agent" as F
participant "VDR" as FV
participant "Wallet" as FW
endbox

== Setup actors ==

E->EW: Create account (with seed)
E->EV: Init client (node address and contracts ABI)
T->TW: Create account (with seed)
T->TV: Init client (node address and contracts ABI)
F->FW: Create account
F->FV: Init client (node address and contracts ABI)

== Assign role ==

E-->T: Pass Account address
T->TV: Build transaction to assign Endorser role
T->TV: Get bytes to sign
T->TW: Sign transaction
T->TV: Set transaction signature
T->TV: Submit transaction
TV->C: Send transaction
C-->C: Execute RoleControl.assignRole contract

== Create Ethr Did ==

note across
  DID is an account address and not require writing on the ledger
end note

E->EV: Build and sign transaction to add DID attribute (Service)
E->EV: Submit transaction
EV->C: Send transaction
C-->C: Execute `EthrExtDidRegistry.setAttribute` contract

== Endorse Ethr Did ==

note across
  Not needed for creation as DID imply to be written by default
  Required for adding of a resource
end note

F->FV: Build Service attribute
F->FV: Prepare endorsement data for setting attribute
F->FW: EdDSA sign endorsement data
F-->E: Pass Service attribute and Signature
E->EV: Build and sign transaction for setting signed attribute
E->EV: Submit transaction
EV->C: Send transaction
C-->C: Execute `EthrExtDidRegistry.setAttributeSigned` contract

== Create Schema ==

E->EV: Build Schema
E->EV: Build and sign transaction to create Schema
E->EV: Submit transaction
EV->C: Send transaction
C-->C: Execute `SchemaRegistry.createSchema` contract
C-->C: Resolve and verify issuerDid ownership

== Endorse Schema ==

F->FV: Build Schema
F->FV: Prepare endorsement data for creating schema
F->FW: EdDSA sign endorsement data
F-->E: Pass Schema and Signature
E->EV: Build and sign transaction to creating signed schema
E->EV: Submit transaction
EV->C: Send transaction
C-->C: Execute SchemaRegistry.createSchemaSigned contract
C-->C: Resolve and verify issuerId ownership

==  ==

@enduml